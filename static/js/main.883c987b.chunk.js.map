{"version":3,"sources":["components/3dScenes/TropicFirstPerson.js","components/home/HomeScrollToTop.js","components/home/HomeContact.js","components/home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["style","height","TropicalVoid","sceneSetup","width","eleModelBlOne","clientWidth","clientHeight","scene","THREE","camera","position","x","y","z","lookAt","renderer","antialias","setSize","shadowMap","enabled","appendChild","domElement","cameraControlsFirstPerson","FirstPersonControls","lookSpeed","movementSpeed","addCustomSceneObjects","loader","GLTFLoader","dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","load","gltf","meshy","traverse","model","material","metalness","receiveShadow","scale","set","add","planeGeometry","planeMaterial","color","wireframe","plane","rotation","Math","PI","outputEncoding","autoUpdate","gammaFactor","directionalLight","castShadow","shadow","spotLight","visible","stop","stepy","clock","startAnimationLoop","delta","getDelta","update","render","requestID","window","requestAnimationFrame","handleWindowResize","aspect","updateProjectionMatrix","this","addEventListener","removeEventListener","cancelAnimationFrame","className","ref","Component","ScrollToTop","useState","showScroll","setShowScroll","Fragment","onClick","scrollTo","top","behavior","display","Home","App","basename","process","id","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.883c987b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\n//\n// import { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { FirstPersonControls } from \"three/examples/jsm/controls/FirstPersonControls\";\n// import { FirstPersonControls } from \"firstpersoncontrols.js\";\n//\n//\n\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { DRACOLoader } from \"three/examples/jsm/loaders/DRACOLoader\";\n\n//\n//\n\nconst style = {\n  height: 600, // we can control scene size by setting container dimensions\n};\n//\n\n//\n//\nclass TropicalVoid extends Component {\n  componentDidMount() {\n    this.sceneSetup();\n    this.addCustomSceneObjects();\n    this.startAnimationLoop();\n\n    //\n    window.addEventListener(\"resize\", this.handleWindowResize);\n  }\n  //\n  //\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleWindowResize);\n    window.cancelAnimationFrame(this.requestID);\n    // right now with the first person control,\n    // we dont need this dispose as it s already included inside the three folder, check the read me, in the\n    // beginning you will find a copy of the code inside the threejs that I am using.\n    // this.controls.dispose();\n  }\n  /*\n\n\n\n  */\n  // 1\n  sceneSetup = () => {\n    // background color scene\n    // this.lemonChiffon = \"rgb(240, 224, 190)\";\n\n    const width = this.eleModelBlOne.clientWidth;\n    const height = this.eleModelBlOne.clientHeight;\n    //\n\n    this.scene = new THREE.Scene();\n    //\n    //\n    this.camera = new THREE.PerspectiveCamera(\n      55, // fov = field of view\n      width / height, // aspect ratio\n      1, // near plane\n      30000 // far plane\n    );\n    /*\n    \n    \n    original\n    \n    this.camera = new THREE.PerspectiveCamera(\n      //\n      25, // fov = field of view\n      width / height, // aspect ratio\n      0.1, // near plane\n      1000 // far plane\n    );\n    \n    \n    \n    \n    \n    \n    \n    \n    */\n    //----------------------------------\n    //           AXES HELPER\n    //----------------------------------\n    // This block of code is just to help you to see where you are at in the scene\n    // if i add the this.axes, it s going to clash with the dispose inside the\n    //\n    // const axes = new THREE.AxesHelper(50); //origin 50\n    // this.scene.add(axes);\n    //\n    this.camera.position.x = 12;\n    this.camera.position.y = 0;\n    this.camera.position.z = 0; // origin: 50\n    //\n    this.camera.lookAt(this.scene.position); //we are looking at the center of the scene(depends of what yoou have in the camera position)\n\n    //\n    //\n    this.renderer = new THREE.WebGL1Renderer({\n      // set the transparency of the scene, otherwise its black\n      // alpha: true,\n      // will make the edges smooth\n      antialias: true,\n    });\n    //\n    //\n    //\n\n    //\n\n    //\n    //\n    // *************************************\n    //\n    //\n    //-------------- before the first person controls , we had this:\n    // OrbitControls allow a camera to orbit around the object\n    // https://threejs.org/docs/#examples/controls/OrbitControls\n    // this.controls = new OrbitControls(this.camera, this.eleModelBlOne);\n    //  ------------- **\n    //\n    //\n    //\n    //  to limit zoom distance so that the User\n    //  dont zoom out of the specified range\n\n    // this.controls.maxDistance = 70;\n\n    //\n    //\n    //\n    this.renderer.setSize(width, height);\n    // BG color from the scene\n    // this.renderer.setClearColor(this.lemonChiffon);\n    this.renderer.shadowMap.enabled = true;\n    // here you append it to the jsx\n    this.eleModelBlOne.appendChild(this.renderer.domElement); // mount using React ref\n\n    this.cameraControlsFirstPerson = new FirstPersonControls(\n      this.camera,\n      this.eleModelBlOne\n    );\n    // ------------ with this 2 lines , the camera will move really fast, its better to hide it while testing it\n    this.cameraControlsFirstPerson.lookSpeed = 0.05; // the speed when you move (without clicking)\n    // lookSpeed = 0.02; slow\n    // lookSpeed = 1; extremely fast\n    this.cameraControlsFirstPerson.movementSpeed = 8; //the speed when you click\n\n    // this.cameraControlsFirstPerson.maxPolarAngle = Math.PI / 2;\n\n    //\n    //\n    //\n    //\n  };\n  //\n  //\n  //\n  //\n\n  /*\n\n\n\n\n\n\n  */\n  // 2\n  addCustomSceneObjects = () => {\n    //----------------------------------\n    //         BLENDER  MODELS\n    //----------------------------------\n    //\n    const loader = new GLTFLoader();\n    const dracoLoader = new DRACOLoader();\n    dracoLoader.setDecoderPath(\"myDecoder/\");\n    loader.setDRACOLoader(dracoLoader);\n\n    //\n    // terrain_grosso_moon.-Normalize-4_.glb\n    // 49,4Kb\n    loader.load(\"./models/palmera-sun-palmeras2_retoucheeeggg.glb\", (gltf) => {\n      this.meshy = gltf.scene;\n\n      gltf.scene.traverse((model) => {\n        if (model.material) model.material.metalness = 0.08;\n\n        model.receiveShadow = true;\n        model.scale.set(2, 2, 2);\n        // model.rotation.y = 1;\n        // model.rotation.x += -0;\n        // model.rotation.y += 0;\n        //\n        model.position.x = 0;\n        model.position.y = -0.4;\n        model.position.z = 0;\n        //\n        //\n        //\n      });\n\n      this.scene.add(gltf.scene);\n    });\n    //\n    // Add PLANE  w , h , segments\n    const planeGeometry = new THREE.PlaneGeometry(500, 500, 100, 55);\n    const planeMaterial = new THREE.MeshLambertMaterial({\n      color: 0xdddddd,\n      wireframe: true,\n    });\n    // var planeMaterial = new THREE.MeshLambertMaterial((color: 0xff0000));\n    this.plane = new THREE.Mesh(planeGeometry, planeMaterial);\n    //\n    this.plane.rotation.x = -0.5 * Math.PI;\n    this.plane.position.y = -1;\n    //\n    //\n    // *** RECEIVE SHADOW\n    // related to the light and the shadow\n    this.plane.receiveShadow = true;\n    this.scene.add(this.plane);\n    //\n    //\n    // var box = new THREE.Box3();\n    // box.setFromObject(this.plane);\n    // //\n    // //\n    // if (this.camera.position.x > box.max.x) {\n    //   this.camera.position.x = box.max.x;\n    // }\n\n    // if (this.camera.position.x < box.min.x) {\n    //   this.camera.position.x = box.max.x;\n    // }\n\n    // if (this.camera.position.z > box.max.z) {\n    //   this.camera.position.z = box.max.z;\n    // }\n\n    // if (this.camera.position.z < box.min.z) {\n    //   this.camera.position.z = box.max.z;\n    // }\n\n    /*\n    \n    \n    \n    \n    \n    \n    */\n    //---------------------\n    //   Directional Light\n    //---------------------\n    //\n    // //\n    this.renderer.outputEncoding = THREE.sRGBEncoding;\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.shadowMap.autoUpdate = true;\n    this.renderer.gammaFactor = 2.2;\n\n    const directionalLight = new THREE.DirectionalLight(0xffffff);\n    directionalLight.position.set(5, -1, 100);\n\n    // position as follow , the light comes from x:-1000, comes from: y and the last comes from : z\n    directionalLight.position.set(1000, 1000, 1000);\n    directionalLight.castShadow = true;\n    directionalLight.shadow.camera = new THREE.OrthographicCamera(\n      -100,\n      200,\n      -200,\n      200,\n      0.5,\n      5000\n    );\n    // //\n    this.scene.add(directionalLight);\n    // The light points to the flat ground\n    // this.directionalLight.target = this.plane;  //dont add this\n    //\n    //\n    //THIS LIGHT IS ON THE BOTTOM\n    //---------------------\n    //     spotLight FF5733\n    //---------------------\n    //\n    //\n    //\n    //\n    // With the light you can see the colors you added to each geometry in the materials\n    this.spotLight = new THREE.SpotLight(0xffffff, 0.5); //intensity:   0.5);\n    // spotLight.position.set( 0 , 10 , 0 );\n    this.spotLight.position.set(5, -50, 0); //x, y , z   original (5, -50, 0);\n    // (2, 32, 32); with this settings the light will be on the front\n    this.spotLight.castShadow = true;\n    //\n    // this will remove the shadows\n    this.spotLight.visible = true;\n    //\n    this.scene.add(this.spotLight);\n    // //\n    //\n\n    /*\n\n\n\n \n */\n    //\n    //\n    // ------------------ clock\n    this.stop = 0;\n    this.stepy = 0;\n\n    this.clock = new THREE.Clock();\n\n    //\n    //\n    //\n  };\n\n  // 3\n  startAnimationLoop = () => {\n    this.stop += 0.005;\n\n    this.stepy += 0.00005;\n    this.delta = this.clock.getDelta();\n    //\n    //\n    this.cameraControlsFirstPerson.update(this.delta);\n    //\n    this.renderer.render(this.scene, this.camera);\n    this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n  };\n  /*\n\n\n\n  */\n  handleWindowResize = () => {\n    const width = this.eleModelBlOne.clientWidth;\n    const height = this.eleModelBlOne.clientHeight;\n    //\n    // updated renderer\n    this.renderer.setSize(width, height);\n    // updated **camera** aspect ratio\n    this.camera.aspect = width / height;\n    // That is the Three.js optimization: you can group multiple camera changes into a block with only one\n    this.camera.updateProjectionMatrix();\n  };\n  /*\n\n\n  */\n  render() {\n    return (\n      <div className=\"scene-oblivion\">\n        <div\n          className=\"modelBleOne\"\n          style={style}\n          ref={(ref) => (this.eleModelBlOne = ref)}\n        ></div>\n      </div>\n    );\n  }\n}\n\nexport default TropicalVoid;\n","import React, { useState } from \"react\";\n\nconst ScrollToTop = () => {\n  // Hooks are a new addition in React 16.8. They let you use state and other React features without writing a class.\n  // Declare a new state variable, which we'll call \"showScroll\"\n  const [showScroll, setShowScroll] = useState(false);\n\n  const checkScrollTop = () => {\n    setShowScroll(true);\n    //  If showScroll is true, show the arrow. If it is false, hide the arrow.\n  };\n\n  const scrollTop = () => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n    // Our top value is 0 because all we want this arrow to do is scroll the window back to the top of the page\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo\n  };\n\n  window.addEventListener(\"scroll\", checkScrollTop);\n\n  return (\n    <React.Fragment>\n      <div className=\"back-to-top\">\n        <h1\n          className=\"scrollTop\"\n          onClick={scrollTop}\n          style={{ display: showScroll }}\n        >\n          {\" \"}\n          Back to top <span>&#10230; </span>\n        </h1>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ScrollToTop;\n\n// https://medium.com/better-programming/create-a-scroll-to-top-arrow-using-react-hooks-18586890fedc\n","import React, { Component } from \"react\";\nimport ScrollToTop from \"./HomeScrollToTop\";\n//\n//\n\nclass HomeContact extends Component {\n  state = {\n    links: [\n      {\n        id: \"0\",\n        target: \"https://github.com/nadiamariduena\",\n        label: \"Github\",\n      },\n      {\n        id: \"1\",\n        target: \"https://www.linkedin.com/in/nadia-mariduena/\",\n        label: \"LinkedIn\",\n      },\n    ],\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container-contact\">\n          <section className=\"contact\">\n            <div className=\"wrapper-contact\">\n              {/* ----------------------------------------- */}\n              {/*             BACK TO TOP                   */}\n              {/* ----------------------------------------- */}\n              <ScrollToTop />\n              {/* ----------------------------------------- */}\n              {/* ----------------------------------------- */}\n              {/* ----------------------------------------- */}\n              <div className=\"cont-lnk-wrapper\">\n                <div className=\"cont-links\">\n                  <h3> CONTACT</h3>\n                  <ul>\n                    <li>N.MARIDUENA@TUTANOTA.COM</li>\n                  </ul>\n                </div>\n                {/* ---------------------- */}\n                <div className=\"cont-links\">\n                  <h3> FOLLOW</h3>\n                  {this.state.links.map((link) => {\n                    return (\n                      <ul key={link.id}>\n                        <li>\n                          <a\n                            href={link.target}\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                          >\n                            {link.label}\n                          </a>\n                        </li>\n                      </ul>\n                    );\n                  })}\n                </div>\n                {/* ---------------------- */}\n                <div className=\"cont-links\">\n                  <h3>\n                    {\" \"}\n                    &#169; NADIAMARIDUENA <span> 2020</span>\n                  </h3>\n                </div>\n              </div>\n              {/* ----------------------------------------- */}\n              {/* ----------------------------------------- */}\n              {/* ----------------------------------------- */}\n            </div>\n          </section>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default HomeContact;\n","import React from 'react';\n\n// import Header from \"../navigation/Header\";\nimport TropicalVoid from '../3dScenes/TropicFirstPerson';\n// import HomePortfolioGallery from \"./HomePortfolioGallery\";\nimport ContactSection from \"./HomeContact\";\n// import FooterTextAnimation from \"./HomeFooterText\";\n\n//\n\nfunction Home() {\n  return (\n    <React.Fragment>\n      {/* --------------- */}\n      {/* --------------- */}\n      {/* --------------- */}\n      {/* <Header /> */}\n      {/* --------------- */}\n      {/* --------------- */}\n      {/* --------------- */}\n      <section className=\"container-section-scene-home\">\n        {/* ----------------------------------------- */}\n        {/*             FLAG SECTION                  */}\n        {/* ----------------------------------------- */}\n        <div className=\"scene-threejs\">\n          <div className=\"wrapper-flag-scene-threejs\">\n            {/* ----------------------------------------- */}\n\n            <div className=\"wrapper-scene-oblivion\">\n              <TropicalVoid />\n            </div>\n            {/* ----------------------------------------- */}\n\n            {/* <div className=\"scene-description-home\">\n              <div className=\"wrapper-scene-description-home\">\n                <h3 className=\"h3-text-img-home\">\n                  Featured work\n                </h3>\n                <p>\n                  Website for Meyoko's artworks, I created\n                  during my time at DCI. Additional\n                  illustration by Meyoko\n                </p>\n              </div>\n            </div> */}\n            {/* ----------------------------------------- */}\n          </div>\n        </div>\n      </section>\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* <section className=\"container-gallery\">\n        <HomePortfolioGallery />\n      </section> */}\n\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n      {/* ----------------------------------------- */}\n\n      {/* ----------------------------------------- */}\n      {/*             CONTACT SECTION               */}\n      {/* ----------------------------------------- */}\n      {/* <ContactSection /> */}\n      {/* --------------- */}\n      {/* <FooterTextAnimation /> */}\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\n//\n\n//\nimport Home from \"./components/home/Home\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <div id=\"wrapper-app\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              {/* <Route exact path=\"/portfolio\" component={Portfolio} /> */}\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/main.scss\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}